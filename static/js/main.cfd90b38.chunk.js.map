{"version":3,"sources":["Feedback/Statistics/Statistics.js","Feedback/FeedbackOptions/FeedbackOptions.js","Feedback/SectionTitle/SectionTitle.js","Feedback/Notification/Notification.js","Feedback/Feedback.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","positivePercentage","totalFeedback","FeedbackOptions","options","onLeaveFeedback","type","onClick","SectionTitle","title","Notification","message","Feedback","state","props","initialState","goodIncrement","setState","prevState","neutralIncrement","badIncrement","this","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA4BeA,EA1BI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,QACAC,EAHiB,EAGjBA,IACAC,EAJiB,EAIjBA,mBACAC,EALiB,EAKjBA,cALiB,OAOjB,qCACE,4CACA,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,QAEZ,gCACE,gDAAmBE,KAElBD,EAAqB,EACpB,oDAAuBA,EAAvB,OAEA,6DCNOE,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,gCACE,wBAAQC,KAAK,SAASC,QAASF,EAAgB,GAA/C,SACGD,EAAQ,KAEX,wBAAQE,KAAK,SAASC,QAASF,EAAgB,GAA/C,qBAGA,wBAAQC,KAAK,SAASC,QAASF,EAAgB,GAA/C,qBCFWG,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,kCACE,6BAAKA,OCAMC,EAFM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KCIpCC,E,4MAKJC,MAAQ,EAAKC,MAAMC,a,EAEnBC,cAAgB,WACd,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BpB,KAAMoB,EAAUpB,KAAO,O,EAG3BqB,iBAAmB,WACjB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CAC1BnB,QAASmB,EAAUnB,QAAU,O,EAGjCqB,aAAe,WACb,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BlB,IAAKkB,EAAUlB,IAAM,O,4CAIzB,WACE,MAA+BqB,KAAKR,MAA5Bf,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBsB,EAAqBxB,EAAOE,EAAMD,EAClCwB,EAAkCC,KAAKC,MAC1C3B,EAAOwB,EAAsB,KAEhC,OACE,qCACE,cAAC,EAAD,CAAcb,MAAM,0BACpB,cAAC,EAAD,CACEL,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiB,CACfgB,KAAKL,cACLK,KAAKD,aACLC,KAAKF,oBAIe,IAAvBG,EACC,cAAC,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,CACEb,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,mBAAoBsB,EACpBrB,cAAeoB,W,GAjDJI,aAAjBd,EACGe,aAAe,GAwDTf,QC/CAgB,EAdH,kBAEV,cAAC,EAAD,CAAUb,aAAc,CACtBjB,KAAM,EACNC,QAAS,EACTC,IAAK,MCFT6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cfd90b38.chunk.js","sourcesContent":["import React from 'react';\n\nconst Statistics = ({\n  good,\n  neutral,\n  bad,\n  positivePercentage,\n  totalFeedback,\n}) => (\n  <>\n    <h2>Statistics</h2>\n    <ul>\n      <li>Good: {good}</li>\n      <li>Neutral: {neutral}</li>\n      <li>Bad: {bad}</li>\n    </ul>\n    <div>\n      <p>TotalFeedback: {totalFeedback}</p>\n\n      {positivePercentage > 0 ? (\n        <p>Positive feedback: {positivePercentage}%</p>\n      ) : (\n        <p>Positive feedback: 0%</p>\n      )}\n    </div>\n  </>\n);\n\nexport default Statistics;\n","import React from 'react';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div>\r\n    <button type=\"button\" onClick={onLeaveFeedback[0]}>\r\n      {options[0]}\r\n    </button>\r\n    <button type=\"button\" onClick={onLeaveFeedback[1]}>\r\n      Neutral\r\n    </button>\r\n    <button type=\"button\" onClick={onLeaveFeedback[2]}>\r\n      Bad\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst SectionTitle = ({ title }) => (\r\n  <section>\r\n    <h1>{title}</h1>\r\n  </section>\r\n);\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ message }) => <p>{message}</p>;\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from '../Feedback/Statistics';\nimport FeedbackOptions from './FeedbackOptions';\nimport SectionTitle from './SectionTitle';\nimport Notification from './Notification';\n\nclass Feedback extends Component {\n  static defaultProps = {};\n\n  static propTypes = {};\n\n  state = this.props.initialState;\n\n  goodIncrement = () => {\n    this.setState(prevState => ({\n      good: prevState.good + 1,\n    }));\n  };\n  neutralIncrement = () => {\n    this.setState(prevState => ({\n      neutral: prevState.neutral + 1,\n    }));\n  };\n  badIncrement = () => {\n    this.setState(prevState => ({\n      bad: prevState.bad + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = good + bad + neutral;\n    const countPositiveFeedbackPercentage = Math.round(\n      (good / countTotalFeedback) * 100,\n    );\n    return (\n      <>\n        <SectionTitle title=\"Please leave feadback\" />\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={[\n            this.goodIncrement,\n            this.badIncrement,\n            this.neutralIncrement,\n          ]}\n        />\n\n        {countTotalFeedback === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            positivePercentage={countPositiveFeedbackPercentage}\n            totalFeedback={countTotalFeedback}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import Feedback from './Feedback'\n\nconst App = () => (\n\n  <Feedback initialState={{\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }} />\n)\n\n\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}